Program     : FA
FA          : "DFA"|"NFA" + "(" + NAME + ")" + "{" + STATES + "}" + "{" + ALPHABET + "}"
STATES      := NODE + ("," + NODE)*
NODE        := LABEL
            |  LABEL + "(" + "start" + ")"
            |  LABEL + "(" + "accepting" + ")"
ALPHABET    := (CHARE + ":" + "{" + ARCS + "}")*
ARCS        := (ARC + ("," + ARC)*)?
ARC         := "(" + LABEL + "," + LABEL + ")"
LABEL       := [a-zA-Z0-9]+
CHARE       := [a-zA-Z0-9]|"\e"

Notes: \e denotes an epsilon character
       Labels will be truncated at 5 characters in output

Example Program:

NFA that accepts binary string with at least 2 zeroes.

NFA(myNFA) {
    q0(start), q1, q2(accept)
} {
    \e: { (q0, q0) }
    0:  { (q0, q1), (q1, q2), (q2, q2) }
    1:  { (q0, q0), (q1, q1), (q2, q2) }
}